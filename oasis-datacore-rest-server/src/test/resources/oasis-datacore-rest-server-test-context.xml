<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:p="http://www.springframework.org/schema/p"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:jaxrs="http://cxf.apache.org/jaxrs"
      xmlns:cxf="http://cxf.apache.org/core"
      xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
      xsi:schemaLocation=
      "http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.2.xsd
      http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
      http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
      http://cxf.apache.org/transports/http/configuration
      http://cxf.apache.org/schemas/configuration/http-conf.xsd">

   <!-- overriding some properties (BEFORE import to take precedence over imported properties) -->
   <context:property-placeholder location="classpath:oasis-datacore-rest-server-test.properties"
      order="-2" ignore-unresolvable="true"/><!-- so defaults to importing PropertyPlaceholder/*Resolver -->
   
   <!-- reusing client for test
   NO ALREADY REUSED FOR INIT OF SAMPLES -->
   <!-- import resource="classpath:oasis-datacore-rest-client-context.xml" / -->
   
   <!-- server definition (AFTER client to override ex. its bus !) -->
   <import resource="classpath:oasis-datacore-deploy-context.xml" />
   
 <!-- Used to record requests with JMeter -->  
 <!-- http-conf:conduit name="http://localhost:8081/.*"-->
 <!--
 <http-conf:conduit name="*.http-conduit">
  <http-conf:client ProxyServer="localhost"
  ProxyServerPort="8282" ProxyServerType="HTTP" AllowChunking="false" />
 </http-conf:conduit>
-->

   <!-- OVERRIDE to add MockLoginInterceptors (required by tests) : -->
   <!-- Spring configuration for Datacore API CXF server -->
   <jaxrs:server id="datacoreApiServer" address="${datacoreApiServer.jaxrsBaseUrl}"
         staticSubresourceResolution="true"><!-- optimization since no JAXRS annotations on impls,
         see http://cxf.apache.org/docs/jax-rs-basics.html#JAX-RSBasics-Staticresolutionofsubresources -->
      <jaxrs:serviceBeans>
         <ref bean="datacoreApiImpl"/>
         <ref bean="datacore.model.apiImpl"/>
         <ref bean="datacore.rights.apiImpl" /> 
         <ref bean="datacore.contribution.apiImpl" />
         <ref bean="datacore.server.rootRedirectResource" />
         <ref bean="datacore.server.statusResource" />
         <ref bean="datacore.playground.loginResource" />
         <ref bean="datacore.playground.tokenResource" />
         <ref bean="datacore.playground.configurationResource" />
         <ref bean="swagger.resourceJSON" />
      </jaxrs:serviceBeans>
      <jaxrs:providers>
         <ref bean="datacoreApiServer.jacksonJsonProvider"/>
         <ref bean="datacoreApiServer.JsonLdJavaRdfProvider"/>
         <!-- to add to response error message built out of exception (ex. if WebApplicationException not thrown explicity) :
         (see http://cxf.apache.org/docs/jax-rs-basics.html#JAX-RSBasics-CustomizingdefaultWebApplicationExceptionmapper ) -->
         <!-- bean class="org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper">
            <property name="addMessageToResponse" value="true"/>
         </bean -->
         <bean class="org.oasis.datacore.rest.server.security.AccessDeniedExceptionMapper"/><!-- to HTTP 403 -->
         <ref bean="swagger.resourceWriter" />
         <ref bean="swagger.apiWriter" />
      </jaxrs:providers>
      <!-- Single value array POST handling interceptors (rather than whole bus) : -->
      <jaxrs:inInterceptors>
		   <bean class="org.oasis.datacore.rest.server.security.mock.MockLoginServerInInterceptor"/><!-- OVERRIDE added -->
         <bean class="org.oasis.datacore.rest.server.cxf.ArrayServerInInterceptor">
            <property name="objectMapper"><ref bean="datacoreApiServer.objectMapper"/></property>
         </bean>
         <bean class="org.oasis.datacore.rest.server.cxf.ProjectServerInInterceptor"/>
         <bean class="org.oasis.datacore.monitoring.TimeTaggerInInterceptor"/>
         <bean class="org.oasis.datacore.monitoring.ContextInInterceptor"/>
      </jaxrs:inInterceptors>
      <jaxrs:outInterceptors>
         <bean class="org.oasis.datacore.rest.server.cxf.ArrayServerOutInterceptor"/>
         <bean class="org.oasis.datacore.monitoring.TimeComputerOutInterceptor"/>
         <bean class="org.oasis.datacore.monitoring.SendEventsInterceptor"/>
         <!-- <bean class="org.oasis.datacore.rest.server.security.mock.MockLoginServerOutInterceptor"/> --><!-- TODO MOCK move -->
      </jaxrs:outInterceptors>
      <!-- TODO also autn --><!-- bean id="authorizationFilter" class="com.bar.providers.AuthorizationRequestHandler"/ -->
      <jaxrs:features>
         <cxf:logging/>
      </jaxrs:features>
      <jaxrs:properties>
         <!-- Prevents logging WebApplicationException not HTTP 400 or 500 -->
         <entry key="org.apache.cxf.logging.FaultListener">
            <bean class="org.oasis.datacore.rest.server.cxf.ClientServerErrorFaultListener"/>
         </entry>
      </jaxrs:properties>
   </jaxrs:server>
   
</beans>
