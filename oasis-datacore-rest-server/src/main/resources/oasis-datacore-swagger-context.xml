<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:p="http://www.springframework.org/schema/p"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:jaxrs="http://cxf.apache.org/jaxrs"
      xmlns:cxf="http://cxf.apache.org/core"
      xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
      xsi:schemaLocation=
      "http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.2.xsd
      http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
      http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
      http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd">

   <!-- default & overriding some properties (BEFORE import to take precedence over imported properties)
   (overriding ones are at end of comma-separated location)
   Lowest order takes precedence, here -1 to allow ex. to be overriden by test at -2, see
   http://stackoverflow.com/questions/11645360/overriding-properties-in-spring-3-1-with-a-local-properties-file
   However this doesn't work for -deploy*.properties, which has to be put instead in the same
   property placeholder as -server.properties instead and after it to work.
   Moreover without a first * after classpath (for jars ?) * doesn't work !
   See also http://www.baeldung.com/2012/02/06/properties-with-spring/ -->
   <context:property-placeholder location="classpath:oasis-datacore-rest-api.properties,classpath:oasis-datacore-rest-server.properties,classpath*:oasis-datacore-deploy*.properties"
      order="-1" ignore-unresolvable="true"/><!-- so defaults to importing PropertyPlaceholder/*Resolver -->
   
   
   <!-- SWAGGER -->
   <!-- Swagger API listing resource -->
   <bean id="swagger.resourceJSON" class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON" />
   <!-- Swagger writers -->
   <bean id="swagger.resourceWriter" class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" />
   <bean id="swagger.apiWriter" class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" />
   
   
   <!-- SWAGGER - this scans the classes for resources -->
   <bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
      <property name="resourcePackage" value="org.oasis.datacore.rest.api"/>
      <property name="version" value="1.0.0"/>
      <property name="basePath" value="${datacoreApiServer.baseUrl}"/>
      <property name="title" value="Datacore Resource API"/>
      <property name="description">
         <!-- 20141112 TODO no more need to resolve placeholders (done in ajax) -->
         <!-- bean factory-bean="springPlaceholderResolver" factory-method="resolveEmbeddedValue">
            <constructor-arg type="java.lang.String"  -->
               <bean class="org.apache.commons.io.IOUtils" factory-method="toString">
                  <constructor-arg value="classpath:swagger/dc/description.html" type="java.io.InputStream" />
               </bean>
            <!-- /constructor-arg>
         </bean -->
      </property>
      <property name="contact" value="http://www.oasis-eu.org"/>
      <property name="license" value="Apache 2.0 License"/><!-- TODO LGPL ??? -->
      <property name="licenseUrl" value="http://www.apache.org/licenses/LICENSE-2.0.html"/>
      <property name="scan" value="true"/>
   </bean>
   
</beans>
