## doc
## TODO rather using templating (through JAXRS providers) ?? ex. handlebars.js like Atol,
## see https://github.com/pole-numerique/oasis/blob/master/oasis-webapp/src/main/java/oasis/web/view/HandlebarsBodyWriter.java
datacore.api.doc=Allows to manage (CRUD) and find Data Resources and their Models.\
   \n<br/><br/>\n\
   &nbsp;&nbsp;- <b>Data Resources</b> are handled in <a href=\"http://json-ld.org/\">JSON-LD</a>-like \
   (implicit context) format (see also <a href=\"http://json-ld.org/playground/index.html\">\
   playground</a>) and with <b>W3C LDP</b> (Linked Data Platform, see \
   <a href=\"https://dvcs.w3.org/hg/ldpwg/raw-file/tip/ldp-primer/ldp-primer.html\">primer</a> and \
   <a href=\"http://www.w3.org/2012/ldp/wiki/Main_Page\">wiki</a>)-like operations (URIs, \
   future collection filtering (<a href=\"http://www.w3.org/2012/ldp/wiki/LDPNext\">1</a>, \
   <a href=\"http://lists.w3.org/Archives/Public/public-ldp-wg/2012Dec/0030.html\">2</a>)\
   -inspired finders etc.). <b>Have a look at existing Resources, at</b> \
   <a href="/dc/type/!pli:city">/dc/type/!pli:city</a> for instance for resources in the \
   <span style="font-family: Consolas,'Liberation Mono',Menlo,Courier,monospace; background-color: #f8f8f8; border: 1px solid #ddd; border-radius: 3px;">\
   !pli:city</span> Model type.\
   \n<br/><br/>\n\
   &nbsp;&nbsp;- <b>Data Models</b> describe what kinds of Data Resources are allowed in a \
   <a href="http://json-schema.org/">JSON Schema</a>-like format (see \
   <a href="http://jsonschema.net/">jsonschema.net playground</a>) with \
   <span style="font-family: Consolas,'Liberation Mono',Menlo,Courier,monospace; background-color: #f8f8f8; border: 1px solid #ddd; border-radius: 3px;">\
   string, boolean, int, float, long, double, date, map, list, i18n, resource\
   </span> fields grouped in reusable <b>Mixin</b> types. \
   <b>Have a look at known Models at</b> <a href=\"/dc/model\">/dc/model</a>. \
   Further, Models may be queried as Resources in their <a href="/dc/type/dcmo:model" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">dcmo:model</a> metamodel (<b>beta</b>). \
   It allows to know in which Model types a given kind of Resources can be queried, for instance :\
   \n<br/>\n\
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- <a href="/dc/type/dcmo:model?dcmo:globalMixins=!pl:place" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">dcmo:globalMixins=!pl:place</a> : lists Models that describe a location i.e. have a pl:shape WKS point, \
   such as : \
   <a href="/dc/type/dcmo:model/!co:company/0" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = ti.indexOf('/', l); window.t = ti.substring(0, i); window.iri = tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.getData({type:window.t, iri:window.iri, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">!co:company</a>, \
   whose WKS can then be retrieved, for instance by \
   GET <a href="/dc/type/!co:company" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">/dc/type/!co:company</a> .\
   \n<br/>\n\
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- <a href="/dc/type/dcmo:model?dcmo:globalFields.dcmf:name=!plo:country_name" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">dcmo:globalFields.dcmf:name=!plo:country_name</a> : lists Models that "officially" have a country \
   (i.e. having the "official" field for a country in OASIS Datacore), and that can therefore be queried on that, \
   such as : \
   <a href="/dc/type/dcmo:model/!plo:country/0" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = ti.indexOf('/', l); window.t = ti.substring(0, i); window.iri = tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.getData({type:window.t, iri:window.iri, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">!plo:country</a>, \
   <a href="/dc/type/dcmo:model/!pli:city/0" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = ti.indexOf('/', l); window.t = ti.substring(0, i); window.iri = tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.getData({type:window.t, iri:window.iri, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">!pli:city</a>, \
   <a href="/dc/type/dcmo:model/!co:company/0" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = ti.indexOf('/', l); window.t = ti.substring(0, i); window.iri = tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.getData({type:window.t, iri:window.iri, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">!co:company</a>, \
   <a href="/dc/type/dcmo:model/!cityareauseit:urbanAreaDestinationOfUse/0" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = ti.indexOf('/', l); window.t = ti.substring(0, i); window.iri = tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.getData({type:window.t, iri:window.iri, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">!cityareauseit:urbanAreaDestinationOfUse</a>, \
   <a href="/dc/type/dcmo:model/!cityarea:cityArea/0" onclick="\
   javascript:var l = '/dc/type/'.length; var ti = $(this).attr('href').substring(l); var i = ti.indexOf('/', l); window.t = ti.substring(0, i); window.iri = ti.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.getData({type:window.t, iri:window.iri, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">!cityarea:cityArea</a> , \
   which can then be queried by country, for instance by \
   GET <a href="/dc/type/!plo:country" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">/dc/type/!plo:country</a>, \
   GET <a href="/dc/type/!pli:city" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">/dc/type/!pli:city</a>, \
   GET <a href="/dc/type/!co:company" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">/dc/type/!co:company</a>, \
   GET <a href="/dc/type/!cityareauseit:urbanAreaDestinationOfUse" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">/dc/type/!cityareauseit:urbanAreaDestinationOfUse</a> \
   and GET <a href="/dc/type/!cityarea:cityArea" onclick="\
   javascript:var l = '/dc/type/'.length; var tq = $(this).attr('href').substring(l); var i = tq.indexOf('?'); window.t = i == -1 ? tq : tq.substring(0, i); window.q = i == -1 ? '' : tq.substring(i + 1); window.datacore = new SwaggerApi({ url: 'http://localhost:8080/api-docs', success: function() { if(datacore.ready === true) { datacore.apis.dc.findDataInType({type:window.t, '#queryParameters':window.q, Authorization:'Basic YWRtaW46YWRtaW4='}, function(data) { var prettyJson = JSON.stringify(eval(data.content.data), null, '\\t').replace(/\\n/g, '<br>'); $('.mydata').html(prettyJson); }); } } }); return false;\
   ">/dc/type/!cityarea:cityArea</a>.\
   \n<br/><br/>\n\
   <a href=\"https://github.com/pole-numerique/oasis-datacore/wiki\">See wiki</a> for further \
   examples, FAQ, how to & common use cases, cookbook (writing clients...) and full documentation.\
   \n<br/><br/>\n\
   <p>\
   <button onclick="javascript:document.getElementById('mydata').innerHTML = ''">reset</button><br/>\n\
   <div class="block response_body">\
   <pre class="json" style="font-family: Consolas,'Liberation Mono',Menlo,Courier,monospace; background-color: #f8f8f8; border: 1px solid #ddd; border-radius: 3px; max-height: 400px; overflow-y: auto;"><code id="mydata" class="mydata"></code></pre>\
   </div>\
   </p>\
   <p></p>\
   <p></p>\
   <b>This endpoint</b> has for base URL <a href="${datacoreApiServer.baseUrl}">${datacoreApiServer.baseUrl}</a> \
   (URL that must be called by clients using HTTP) \
   and for container URL <a href="${datacoreApiServer.containerUrl}">${datacoreApiServer.containerUrl}</a> \
   (URL that must be used to build Datacore Data resource URIs).\
   \n<br/><br/>\n\
   <b>URIs</b> of Datacore Data resource are in the form $containerUrl/dc/type/$type/$iri, where \
   $containerUrl is unique for a container (ex. http://data.oasis-eu.org), $type is \
   among available model types and $iri is the resource's Internal Resource Identifier (IRI). \
   IRIs have 3 constraints : they must be valid URL endings, unique (not enforced yet), \
   and if possible readable and representative of the resource.\
   \n<br/><br/>\n\
   Using operations where type of data is provided in URL usually improves performances : \
   '*inType' methods are faster, finder queries with type even more.\
   \n<br/><br/>\n\
   <strong>WARNING</strong> Swagger UI has some limitations (but not other HTTP clients) :\
   \n<br/>&nbsp;&nbsp;- it encodes path parameters, so type & IRI will be wrong if they have \
   encodable characters (ex. slash in IRI).\
   \n<br/>&nbsp;&nbsp;- it weirdly encodes query parameter values, notably '+' as space (which \
   is especially annoying when specifying ASC order in Datacore queries). It probably has to do \
   <a href="http://stackoverflow.com/questions/2678551/when-to-encode-space-to-plus-or-20">\
   with application/x-www-form-encoded encoding</a>.\
   \n<br/><br/>\n\
   <strong>Authentication:</strong>\
   \n<br/>&nbsp;&nbsp;- In production (and integration), OASIS Kernel OAuth2 authentication must be used, i.e. \
   <a href="https://github.com/pole-numerique/oasis-datacore/wiki/How-to-use-OAuth2-with-Datacore">\
   HTTP requests' Authorization header must be "Bearer &lt;base 64-encoded valid OAuth2 Bearer \
   / Access Token&gt;"</a> (see <a href="https://github.com/pole-numerique/oasis-datacore/wiki/How-to-authenticate-to-kernel-oauth2">how to get one</a>).\
   \n<br/>&nbsp;&nbsp;- In dev mode, there is a mock authentication system that supports Basic Auth \
   (i.e. HTTP requests' Authorization header must be "Basic &lt;base 64-encoding of username:password&gt;\"), \
   for a few users without password, see available ones in \
   <a href="https://github.com/pole-numerique/oasis-datacore/blob/master/oasis-datacore-rest-server/src/main/resources/oasis-datacore-security-mock-context.xml">\
   configuration</a>.\
   \n<br/>&nbsp;&nbsp;- Datacore API's Swagger UI allows to provide said Authorization header, \
   with a default value that logs as admin in dev mode.