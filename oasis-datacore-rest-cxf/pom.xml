<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
	http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

  <parent>
   <groupId>org.oasis.datacore</groupId>
   <artifactId>oasis-datacore</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

	<artifactId>oasis-datacore-rest-cxf</artifactId>
	<name>OASIS Datacore REST Client</name>
   <description>Provides an independent Jackson / CXF client to Datacore REST API.
   Also used in REST server to test it.</description>


	<dependencies>

      <!-- Datacore REST API -->
      <dependency>
        <groupId>org.oasis.datacore</groupId>
        <artifactId>oasis-datacore-rest-api</artifactId><!-- brings JacksonJsonProvider, to configure in clients -->
      </dependency>

      <!-- Jackson annotations -->
      <!-- dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-json-provider</artifactId>
      </dependency --><!-- TODO already in API --><!-- brings JacksonJsonProvider, to configure in clients -->
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-joda</artifactId>
      </dependency>

      <!-- Spring framework -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>

    <!-- cxf -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
    </dependency>
    <!-- dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
    </dependency --><!-- for SOAP -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-local</artifactId>
    </dependency>
    <!-- logging : for tests log4j, but let integrators use the backend they want -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- for async BUT ONLY ON JETTY -->
    <!-- dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-continuation</artifactId>
      <version>8.0.4.v20111024</version>
    </dependency -->
    <!-- XXX Needed by Apache CXF, but missing from the deps. hierarchy ??? -->
    <!-- dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-ext</artifactId>
      <version>1.7</version>
    </dependency -->

      <dependency>
         <groupId>net.sf.ehcache.internal</groupId>
         <artifactId>ehcache-core</artifactId>
         <!-- groupId>net.sf.ehcache</groupId>
         <artifactId>ehcache</artifactId>
         <type>pom</type --><!-- NO worked in 2.6.0 but not in 2.7.4 anymore because
         no more dependencies to ehcache-core etc. (but in 2.9 works again !) ;
         would probably work without type=pom but brings in too much stuff (hibernate, terracotta...) -->
      </dependency>

      <!-- for EnumerationUtils, ListUtils... -->
      <dependency>
         <groupId>commons-collections</groupId>
         <artifactId>commons-collections</artifactId>
      </dependency>
      <!-- for IOUtils TODO used ?? -->
      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
      </dependency>

	</dependencies>

</project>
