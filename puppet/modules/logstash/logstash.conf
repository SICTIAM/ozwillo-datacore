input {
	collectd {
		type => "collectd"
	}
	file {
		type => "linux-syslog"
		path => ["/var/log/syslog" ]
	}
	tcp {
		type => "Riemann"
		port => 9999
	}
	file {
		type => "mongoconf"
		path => ["/data/home/vvoisin/CODE/simple-mongo-cluster/mongodb/conf/conf*.log"]
	}
    	file {
		type => "mongod"
		path => ["/data/home/vvoisin/CODE/simple-mongo-cluster/mongodb/rs*/rs*.log"]
	}
	file {
		type => "mongos"
		path => ["/data/home/vvoisin/CODE/simple-mongo-cluster/mongodb/mongos.log"]
	}
	#file {
	#    type => "mongostat"
	#    path => ["/data/home/vvoisin/TEST/mongostat.log"]
	#}
}
filter {
    if [type] == "mongostat" {
        grok {
            patterns_dir => "./patterns"
            match => ["message", "%{HOSTNAME:host}:%{INT:port}%{SPACE}%{METRIC:insert}%{SPACE}%{METRIC:query}%{SPACE}%{METRIC:update}%{SPACE}%{METRIC:delete}%{SPACE}%{METRIC:getmore}%{SPACE}%{COMMAND:command}%{MONGOTYPE1}%{SIZE:vsize}%{SPACE}%{SIZE:res}%{SPACE}%{NUMBER:fault}%{MONGOTYPE2}%{SIZE:netIn}%{SPACE}%{SIZE:netOut}%{SPACE}%{NUMBER:connections}%{SPACE}%{USERNAME:replicaset}%{SPACE}%{WORD:replicaMember}%{SPACE}%{TIME:time}"]
        }
    }
    
    if [tags] == "_grokparsefailure" { 
        drop { } 
    }
    
    if [message] == "" { 
        drop { } 
    }
}
output {
	stdout { }
	elasticsearch_http {
		host => "127.0.0.1"
	}
}
