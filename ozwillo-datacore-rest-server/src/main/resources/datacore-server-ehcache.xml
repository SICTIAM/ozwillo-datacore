<!--
Ozwillo Datacore
(c) Open Wide 2013-2015
-->
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="ehcache.xsd"
   name="datacore.server.ehcache"
   updateCheck="false"><!-- updateCheck="false" else tries to contact terracotta.org,
   name else must be shared and will override another one
   see http://stackoverflow.com/questions/10013288/another-unnamed-cachemanager-already-exists-in-the-same-vm-ehcache-2-5
   -->
   
   <diskStore path="java.io.tmpdir"/>
    
   <defaultCache 
      maxElementsInMemory="10000" 
      eternal="true" 
      overflowToDisk="false"/><!-- else performance hit -->
      
   <!--  cache data resources (freshness checked using ETag) -->
   <cache name="org.springframework.security.oauth2.provider.OAuth2Authentication"
         maxElementsInMemory="20000" timeToLiveSeconds="300" overflowToDisk="false" />
         <!-- NB :
         - access_tokens expire after 300s. This is an order of magnitude similar to that of
         a manual IT operation such as revoking a token. It is still enough not to hamper
         the cache's performance boost in case of ex. mass upload. The 3600s default however
         would be too much.
         - memoryStoreEvictionPolicy="LRU" is default
         TODO LATER also evict on logout, even when done outside Datacore,
         up to obsolescence on Kernel notification OR re-check cached tokens in a background
         thread pool (courtesy of @tbroyer : #124 Token cache expiration is way too long & see
         https://github.com/pole-numerique/oasis-sample-dataprovider-servlets/blob/db7bc2afb0213a0381a8cc16fb39ddc624a725af/src/main/java/oasis/samples/dataprovider/auth/OasisAuth.java#L65-L104 )... -->
   
   <!-- cache all models (they rarely change) -->
   <cache name="TODO DCModel" maxElementsInMemory="5000" eternal="true" overflowToDisk="false" />
    
</ehcache>   